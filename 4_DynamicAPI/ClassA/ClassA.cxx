#include"ClassA.h"
#include"Factory.h"
#include<iostream>

////////////////////////////////////////////////////////////////////////////////
ClassA::ClassA(){

}
////////////////////////////////////////////////////////////////////////////////
ClassA::~ClassA(){

}
////////////////////////////////////////////////////////////////////////////////
void ClassA::Method1(){
  std::cout << "Class A : Method 1 " << std::endl;
}

////////////////////////////////////////////////////////////////////////////////
Base* ClassA::Construct(){
  return (Base*) new ClassA();
}

////////////////////////////////////////////////////////////////////////////////
//            Registering the construct method to the factory                 //
////////////////////////////////////////////////////////////////////////////////
extern "C"{
class proxy{
  public:
    proxy(){
      std::cout << "libClassA is Loaded " << std::endl;
      Factory::getInstance()->Add("ClassA",ClassA::Construct);
    }
};

proxy p;

}
